<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzubmFdHg4GTQ4OCm0ODg1tDf
        3/bR4OD/0eDg/9Df3/bQ4ODW0ODgptHg4GTa5uYVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1N/fMNDf36nQ39/60eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Df3/rQ39+p1N/fMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2uzsDtDf35rQ39/90eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q39/90N/fmtrs
        7A4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLj4y7Q39/d0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0N/f3dLj4y4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADP4OA70N/f8NHg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0N/f8NPg4DsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0uPjLtDf
        3/DR4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0N/f8NLj4y4AAAAAAAAAAAAAAAAAAAAAAAAAANrs
        7A7Q39/d0eDg/9Hg4P/R4OD/s7/A/665uv+zv8D/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/s7/A/665uv+zv8D/0eDg/9Hg4P/R4OD/0N/f3drs7A4AAAAAAAAAAAAA
        AAAAAAAA0N/fmtHg4P/R4OD/0eDg/9Hg4P98bGD/c11P/3xsYP/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P98bGD/c11P/3xsYP/R4OD/0eDg/9Hg4P/R4OD/0N/fmgAA
        AAAAAAAAAAAAANTf3zDQ39/90eDg/9Hg4P/P3t7/u8fI/2JRRv9iUUb/YlFG/665uv+uubr/rrm6/665
        uv+uubr/rrm6/665uv+uubr/rrm6/665uv+uubr/rrm6/2JRRv9iUUb/YlFG/7vHyP/P3t7/0eDg/9Hg
        4P/Q39/91N/fMAAAAAAAAAAA0N/fqdHg4P/R4OD/0eDg/7fEyP99gsH/XFvA/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cW8D/fYLB/7fD
        yP/R4OD/0eDg/9Hg4P/Q39+pAAAAAM7m5hXQ39/60eDg/9Hg4P/R4OD/f4PC/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/f4PC/9Hg4P/R4OD/0eDg/9Df3/ra5uYV0eDgZNHg4P/R4OD/0eDg/9Hg4P9gYMb/XFzH/2Js
        zf9wkdz/YmzN/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/2Js
        zf9wkdz/YmzN/1xcx/9gYMb/0eDg/9Hg4P/R4OD/0eDg/9Hg4GTQ4OCm0eDg/9Hg4P/R4OD/0eDg/1xc
        x/9cXMf/gcDv/4fP9f+BwO//XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/gcDv/4fP9f+BwO//XFzH/1xcx//R4OD/0eDg/9Hg4P/R4OD/0ODgptDg4NbR4OD/0eDg/9Hg
        4P/R4OD/XFzH/1xcx/+BwO//h8/1/4HA7/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/+BwO//h8/1/4HA7/9cXMf/XFzH/9Hg4P/R4OD/0eDg/9Hg4P/Q4ODW0eDg9dHg
        4P/R4OD/0eDg/9Hg4P9cXMf/XFzH/2Jszf9wkdz/YmzN/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/2Jszf9wkdz/YmzN/1xcx/9cXMf/0eDg/9Hg4P/R4OD/0eDg/9Df
        3/bR4OD/0eDg/9Hg4P/R4OD/0eDg/3Fzy/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/3Bzy//R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/sr7Z/2BhyP9cXMf/XFzH/1xcx/9cXMf/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9gYcf/sr7Z/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg9dHg4P/R4OD/0eDg/9Hg4P/R4OD/ws/c/11dx/9cXMf/jZTO/5ae
        0/+WntP/lp7T/5ae0/+WntP/lp7T/5ae0/+WntP/lp7T/5ae0/+WntP/lp7T/42Uzv9cXMf/XV3H/8LP
        3P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Df3/bQ4ODW0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/b3LL/1xc
        x/+uuNH/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/rrjR/1xc
        x/9vcsv/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0ODg1tDg4KbR4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P+HjND/XFzH/5aezP/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P+Wnsz/XFzH/4aM0P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q4OCm0eDgZNHg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/56n1f9cXMf/f4PH/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/3+Dx/9cXMf/nqfV/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4GTO5uYV0ODg+dHg
        4P/R4OD/0eDg/9Hg4P/R4OD/tsHa/1xcx/9pa8T/zdvb/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/N29v/aWvE/1xcx/+2wdr/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q39/6zubmFQAA
        AADQ39+p0eDg/9Hg4P/R4OD/0eDg/9Hg4P/M2t7/XV7H/1xdxv+uucP/v8zM/7/MzP+/zMz/v8zM/7/M
        zP+/zMz/v8zM/7/MzP+/zMz/v8zM/665w/9cXcb/XV7H/8za3v/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Df
        36kAAAAAAAAAANTf3zDR4OD80eDg/9Hg4P/R4OD/0eDg/9Hg4P9+gs7/XFzH/3Byw/+EisD/hIrA/4SK
        wP+EisD/hIrA/4SKwP+EisD/hIrA/4SKwP+EisD/cHLD/1xcx/9+gs7/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/Q39/91N/fMAAAAAAAAAAAAAAAANDf35rR4OD/0eDg/9Hg4P/R4OD/0eDg/7/L3P9kZcj/XFzH/1xc
        x/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/XFzH/1xcx/9cXMf/ZGXI/7/L3P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Df35oAAAAAAAAAAAAAAAAAAAAA2uzsDtDf393R4OD/0eDg/9Hg4P/R4OD/0eDg/8XT
        3f+cpdT/lp7T/5ae0/+WntP/lp7T/5ae0/+WntP/lp7T/5ae0/+WntP/lp7T/5yl1P/F093/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/Q39/d2uzsDgAAAAAAAAAAAAAAAAAAAAAAAAAA0uPjLtDf3/DR4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0N/f8NLj4y4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz+DgO9Df
        3/DR4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Df3/DP4OA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0uPjLtDf393R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q39/d0uPjLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2uzsDtDf35rR4OD80eDg/9Hg4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q39/90N/fmtrs7A4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANTf3zDQ39+p0ODg+dHg4P/R4OD/0eDg/9Hg
        4P/R4OD/0eDg/9Hg4P/R4OD/0eDg/9Hg4P/Q39/60N/fqdTf3zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO5uYV0eDgZNDg
        4KbQ4ODW0eDg9dHg4P/R4OD/0eDg9dDg4NbQ4OCm0eDgZM7m5hUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>